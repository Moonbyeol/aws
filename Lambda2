import boto3
import os
import urllib.parse
import re
from datetime import datetime
from botocore.exceptions import ClientError

s3 = boto3.client('s3')

def lambda_handler(event, context):
    for record in event['Records']:
        bucket = record['s3']['bucket']['name']
        key = urllib.parse.unquote_plus(record['s3']['object']['key'])
        print(f"Processing file: {key}")

        try:
            # 경로 구조 확인
            key_parts = key.split('/')
            if len(key_parts) < 5:
                print(f"[WARN] Invalid file path structure: {key}")
                continue

            database = key_parts[1]
            schema = key_parts[2]
            table = key_parts[3]
            filename = key_parts[4]

            # 날짜 패턴 검증
            match = re.match(r'(\d{8})-', filename)
            if not match:
                print(f"[WARN] Filename '{filename}' does not match expected date pattern.")
                continue

            date_str = match.group(1)
            year = date_str[:4]
            month = date_str[4:6]
            day = date_str[6:8]

            target_key = f"raw/{database}/schema={schema}/table={table}/year={year}/month={month}/day={day}/{filename}"

            if key == target_key:
                print(f"[INFO] File already in correct location: {key}")
                continue

            # S3 객체 복사
            copy_source = {'Bucket': bucket, 'Key': key}
            try:
                s3.copy_object(Bucket=bucket, CopySource=copy_source, Key=target_key)
                print(f"[INFO] File copied to: {target_key}")
            except ClientError as e:
                print(f"[ERROR] Failed to copy object: {str(e)}")
                continue

            # 복사 성공 후 원본 삭제
            try:
                s3.delete_object(Bucket=bucket, Key=key)
                print(f"[INFO] Source file deleted: {key}")
            except ClientError as e:
                print(f"[ERROR] Failed to delete source object: {str(e)}")
                # 삭제 실패 시 복사된 파일을 지울지 여부는 정책에 따라 결정 (여기선 남겨둠)

        except Exception as e:
            print(f"[FATAL] Unexpected error while processing {key}: {str(e)}")
