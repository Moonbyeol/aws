import boto3
import os
import urllib.parse
import re
from datetime import datetime

s3 = boto3.client('s3')

def lambda_handler(event, context):
    # 이벤트에서 S3 버킷과 키 정보 추출
    for record in event['Records']:
        bucket = record['s3']['bucket']['name']
        key = urllib.parse.unquote_plus(record['s3']['object']['key'])
        print(f"Processing file: {key}")

        try:
            # key 예시: raw/database/schema/table/20250614-xxxxx.parquet
            key_parts = key.split('/')
            if len(key_parts) < 5:
                print("Invalid file path structure.")
                continue

            database = key_parts[1]
            schema = key_parts[2]
            table = key_parts[3]
            filename = key_parts[4]

            # 파일명에서 날짜 추출 (YYYYMMDD-xxxxx.parquet)
            match = re.match(r'(\d{8})-', filename)
            if not match:
                print(f"Filename {filename} does not match expected date pattern.")
                continue

            date_str = match.group(1)
            year = date_str[:4]
            month = date_str[4:6]
            day = date_str[6:8]

            # 타겟 경로 생성
            target_key = f"raw/{database}/schema={schema}/table={table}/year={year}/month={month}/day={day}/{filename}"

            # 파일 이동 (copy + delete)
            copy_source = {'Bucket': bucket, 'Key': key}
            s3.copy_object(Bucket=bucket, CopySource=copy_source, Key=target_key)
            s3.delete_object(Bucket=bucket, Key=key)

            print(f"File moved to: {target_key}")

        except Exception as e:
            print(f"Error processing file {key}: {str(e)}")
